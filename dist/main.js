!function(t){var e={};function o(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=e,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";o.r(e);((t,e)=>{const o=e.getDOMStrings();let r;const n=t=>{t.target.classList.contains("addProjectBtn")&&(t.preventDefault(),l()),t.target.classList.contains("projectName")&&(c(t),null!==document.querySelector(".project__holder li.active")&&document.querySelector(".project__holder li.active").classList.remove("active"),t.target.classList.toggle("active")),t.target.classList.contains("addTask")&&(t.preventDefault(),s()),t.target.classList.contains("deleteTodo")&&a(t),t.target.classList.contains("add")&&e.showProjectForm(),t.target.classList.contains("check-box"),t.target.classList.contains("deleteProject")&&d(t)},c=o=>{const n=o.target.dataset.projectId;r=t.projects[n],e.renderTodos(r)},s=()=>{if(void 0===r)return;const n=document.querySelector(o.taskInput);n.value.length&&(r.todos.push({todo:n.value,completed:!1}),t.saveProject(t.projects),e.renderTodos(r),n.value="")},a=o=>{console.log("wat the fuck is going on");const n=parseInt(o.target.dataset.id);r.todos.splice(n,1),e.renderTodos(r),t.saveProject(t.projects)},d=o=>{const n=parseInt(o.target.dataset.projectId);t.projects.splice(n,1),t.saveProject(t.projects),r="",e.renderProjects(t.projects),e.renderTodos(r)},l=()=>{const o=e.getInput().formInput;o.length&&(t.addItem(o),document.querySelector(".project-form-wrapper").innerHTML=""),e.renderProjects(t.projects),e.renderTodos(r)},i=()=>{document.querySelector(o.flexContainer).addEventListener("click",n)};return{init:()=>{e.renderStartingPage(t.projects,r),i()}}})((()=>{let t=[];const e=localStorage.getItem("projects");null!==e&&(t=JSON.parse(e));const o=function(t){this.projectName=t,this.todos=[],this.id=id},r=t=>{localStorage.setItem("projects",JSON.stringify(t))};return{addItem:function(e){const n=t.length,c=new o(e,n);return t.push(c),r(t),c},projects:t,saveProject:r}})(),(()=>{const t={addBtn:".add",form:"#project-form",projectFormInput:".project-form-input",projects:".project__list",projectHolder:".project__holder",todosUl:".todos",todosForm:"#task-form",todoDiv:".todos",todosWrapper:".todos-wrapper",flexContainer:".flex-container",taskFormWrapper:".task-form-wrapper",taskInput:".task-input"},e=e=>{const o=document.querySelector(t.todosUl);o.innerHTML="",void 0!==e&&""!==e&&e.todos.forEach((t,e)=>{o.innerHTML+=`\n\t\t\t\t<div class="todo">\n\t\t\t\t\t<input type="checkbox" class="check-box" name="check" data-id=${e}>\n\t\t\t\t\t<li class="todo-item">${t.todo}</li>\n\t\t\t\t\t<i class="fas fa-trash-alt deleteTodo" data-id=${e}></i>\n\t\t\t\t</div>\n\t\t\t\t`})},o=()=>'\n        <form id="task-form">\n            <header class="project-title"></header>\n            <input type="text" class="task-input" name="taskInput">\n            <button class="addTask">Add Task</button>\n        </form>\n        ',r=()=>'\n        <form action="" id="project-form">\n            <header>\n                <h1>Add project</h1>\n            </header>\n            <section class="form-control">\n                <label for="projectName">Enter your project name</label>\n                <input type="text" name="projectName" class="project-form-input">\n            </section>\n            <section class="form-control">\n                <button type="submit" class="addProjectBtn">Add Project</button>\n            </section>\n        </form>\n        ',n=e=>{const o=document.querySelector(t.projectHolder);o.textContent="",void 0!==e&&e.forEach((t,e)=>{const r=document.createElement("div"),n=document.createElement("li"),c=document.createElement("i");r.className="flex-div",c.className="fas fa-trash-alt deleteProject",n.className="projectName",c.dataset.projectId=e,n.dataset.projectId=e,n.textContent=t.projectName,r.appendChild(n),r.appendChild(c),o.appendChild(r)})};return{getDOMStrings:()=>t,getInput:()=>({formInput:document.querySelector(t.projectFormInput).value}),renderProjects:n,renderTodos:e,renderProjectForm:r,renderAddTaskForm:o,renderStartingPage:(o,r)=>{document.querySelector(t.taskFormWrapper).innerHTML='\n        <form id="task-form">\n            <header class="project-title"></header>\n            <input type="text" class="task-input" name="taskInput">\n            <button class="addTask">Add Task</button>\n        </form>\n        ',n(o),e(r)},showProjectForm:()=>{document.querySelector(".project-form-wrapper").innerHTML='\n        <form action="" id="project-form">\n            <header>\n                <h1>Add project</h1>\n            </header>\n            <section class="form-control">\n                <label for="projectName">Enter your project name</label>\n                <input type="text" name="projectName" class="project-form-input">\n            </section>\n            <section class="form-control">\n                <button type="submit" class="addProjectBtn">Add Project</button>\n            </section>\n        </form>\n        '}}})()).init()}]);